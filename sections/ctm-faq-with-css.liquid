{{ 'ctm-faq-with-css.css' | asset_url | stylesheet_tag }}

{%- style -%}

  .faq_question.active .icon-shape.active svg path.vertical-line {
      display: none;
    }
    .faq_question.active .icon-shape.active svg path {
     stroke: #0F0F11;
    }
{%- endstyle -%}

<div class="ctm_multifaq_title_main {{ section.settings.extra_class }} ">
    <div class="ctm_multifaq_title_inner">
        <div class="faq_main_container">
          {%- if section.settings.main_title != blank -%}
              <div id="faq_subheading{{ forloop.index0 }}" class="faq_subheading ctm_{{ section.settings.main_title | handle }}">
                  <h2>{{ section.settings.main_title }}</h2>
              </div>
          {%- endif -%}
            {%- for block in section.blocks -%}
                {% if block.settings.faq_question != blank %}
                <div class="faq_container faq_container{{ forloop.index0 }}">
                    <div class="faq_question {% if forloop.first and section.settings.first_accordion_open %}open{% endif %}">
                        <div class="faq_question-text">
                            <h5>{{ block.settings.faq_question }}</h5>
                        </div>
                        <div class="icon">
                            <div class="icon-shape">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <path class="vertical-line" d="M20.4853 12.0009H3.51472" stroke="#0F0F11" stroke-width="2.33" stroke-linecap="square" stroke-linejoin="square"></path>
                                    <path d="M12 3.51562V20.4862" stroke="#0F0F11" stroke-width="2.33" stroke-linecap="square" stroke-linejoin="square"></path>
                                  </svg>
                                    
                            </div>
                        </div>
                    </div>
                    <div class="answercont" {% if forloop.first and section.settings.first_accordion_open %}style="display: block;"{% endif %}>
                        <div class="answer">
                            {{ block.settings.faq_answer }}
                        </div>
                    </div>
                </div>
                {%- endif -%}
            {%- endfor -%}
        </div> 
    </div>
</div>

<style>
    .faq_question.active .icon-shape.active svg {
        transform: rotate(-90deg);
        color:#FF5D5D;
    }
</style>


{% schema %}
{
  "name": "FAQ with css",
  "tag": "section",
  "class": "ctm_faqblock_main",
  "settings": [
    {
      "type": "html",
      "label": "Title",
      "id": "main_title"
    },
    {
      "type": "text",
      "label": "Extra Class",
      "id": "extra_class"
    },
    {
      "type": "checkbox",
      "label": "First Accordion Open",
      "id": "first_accordion_open"
    }
  ],
  "blocks": [
    {
      "type": "faq_block",
      "name": "Faq block",
      "limit": 5,
      "settings": [
        {
          "type": "html",
          "label": "Faq Question",
          "id": "faq_question"
        },
        {
          "type": "html",
          "label": "Faq Answer",
          "id": "faq_answer"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "FAQ with css"
    }
  ]
}
{% endschema %}

{% javascript %}
document.querySelectorAll(".ctm_multifaq_title_main").forEach((section) => {
  let questions = section.querySelectorAll(".faq_question");
  let previousActiveQuestion = null;

  questions.forEach((question) => {
      let icon = question.querySelector(".icon-shape");

      question.addEventListener("click", (event) => {
          if (previousActiveQuestion && previousActiveQuestion !== question) {
              previousActiveQuestion.classList.remove("active");
              previousActiveQuestion.querySelector(".icon-shape").classList.remove("active");
              previousActiveQuestion.nextElementSibling.style.maxHeight = 0;
          }

          question.classList.toggle("active");
          icon.classList.toggle("active");

          const answer = question.nextElementSibling;

          if (question.classList.contains("active")) {
              answer.style.maxHeight = answer.scrollHeight + "px";
              previousActiveQuestion = question;  // Update the previously active question
          } else {
              answer.style.maxHeight = 0;
              previousActiveQuestion = null;  // No question is active now
          }
      });

      // Check if the question has the "open" class and add the "active" class accordingly
      if (question.classList.contains("open")) {
          question.classList.add("active");
          icon.classList.add("active");
          const answer = question.nextElementSibling;
          answer.style.maxHeight = answer.scrollHeight + "px";
          previousActiveQuestion = question;  // Set the initially active question
      }
  });
});
{% endjavascript %}